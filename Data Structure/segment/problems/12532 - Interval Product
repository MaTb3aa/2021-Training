/***  الرحيم الرحمن الله بسم   ***/
//==================================================================//
#include<bits/stdc++.h>
using namespace std;
#define sz(s)               (int)s.size()
#define clr(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define INF 0x3f3f3f3f3f3f3f3fLL
#define OO  0x3f3f3f3f
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define popcount(n) __builtin_popcount(n)
#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,fast-math,O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//==================================================================//

//==================================================================//
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
template<typename T>
using Graph = vector<vector<T>>;
typedef long long ll;
typedef unsigned long long ull;
//==================================================================//


//==================================================================//
void printDouble(double f,int p){ cout << fixed;                    //
	 cout << setprecision(p) << f <<endl; }                         //
int  Set(int N,int cur){ return N = N | (1<<cur); }                 //
int  Reset(int N,int cur){ return N = N & ~(1<<cur); }              //
bool Check(int N,int cur){ return (bool)(N & (1<<cur)); }           //
ll   GCD(ll a,ll b){ if(b == 0) return a; return GCD(b,a%b);}       //
ll   LCM(ll a,ll b){ return a*b/GCD(a,b);}                          //
ll   POW(ll a,ll p){ ll res = 1,x = a;while(p){if(p&1)              //
	 res = (res*x); x = (x*x);p >>= 1;} return res;}                //
//==================================================================//


//==================================================================//
void run() {
	ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
//	freopen("stations.in", "r", stdin);
#endif
}
//==================================================================//
const int N = 1e6+3, M = 1e5 + 5, mod = 1e9 + 7;
int n,q;
int a[M];
pair<int,int>seg[4*M];
pair<int,int>merge(pair<int,int>a,pair<int,int>b){
	return {a.first+b.first,a.second+b.second};
}
void build(int n , int s , int e){
	if(s == e){
		seg[n]={0,0};
		if(a[s]<0)seg[n].second++;
		if(a[s]==0)seg[n].first++;
		return;
	}
	build(2*n,s,(s+e)/2);
	build(2*n+1,(s+e)/2+1,e);
	seg[n] = merge(seg[2*n],seg[2*n+1]);
}
int l , r;
pair<int,int> get(int n,int s , int e){
	if(s > r || e < l)return {0,0};
	if(s >= l && e <= r){

		return seg[n];
	}
	return merge(get(2*n,s,(s+e)/2),
		get(2*n+1,(s+e)/2+1,e));
}
int at,val;
void update(int n , int s , int e){
	if(s > at || e < at)return;
	if(s == e){
		seg[n]={0,0};
		if(val<0)seg[n].second++;
		if(val==0)seg[n].first++;
		return;
	}
	update(2*n,s,(s+e)/2);
	update(2*n+1,(s+e)/2+1,e);
	seg[n] = merge(seg[2*n],seg[2*n+1]);
}
int main() {
	run();
		while(cin>>n>>q){
			for (int i = 1; i <= n; ++i) {
				cin>>a[i];
			}
			build(1,1,n);
			string ans="";
			while(q--){
				char c;
				cin>>c;
				if(c=='C'){
					cin>>at>>val;
					update(1,1,n);
				}
				else {
					cin>>l>>r;
					pair<int,int> x = get(1,1,n);
					if(x.first)ans+='0';
					else if(x.second&1)ans+='-';
					else ans+='+';
				}
			}
			cout<<ans<<endl;
		}



}
