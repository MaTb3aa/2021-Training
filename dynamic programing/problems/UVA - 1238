/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define INF 0x3f3f3f3f3f3f3f3fLL
#define OO  0x3f3f3f3f

#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
using namespace std;
template<typename T>
using Graph = vector<vector<T>>;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}

int n;
int a[31];
int sign[31];
bool vis[6005];
bool dp[31][31][6005];
void solve(int i,int open,int sum){
	if(dp[i][open][sum+3000])
		return;
	dp[i][open][sum+3000]=1;
	if(i==n){
		vis[sum+3000]=1;
		return ;
	}
	int val = sum+a[i]*sign[i]*(open%2==0? 1 : -1);
	if(sign[i]==-1)
		solve(i+1,open+1,val);
	if(open>0)
		solve(i+1,open-1,val);
	solve(i+1,open,val);

}

int main() {
	run();
	string s;
	while(getline(cin,s)){
		n=0;
		mem(vis,0);
		mem(dp,0);
		int x=0;int flag=1;
		for (int i = 0; i < sz(s); ++i) {
			if(isdigit(s[i]))x=x*10+(s[i]-'0');
			else if(s[i]=='-')flag=-1;
			else if(s[i]=='+')flag=1;
			else {
				if(isdigit(s[i-1])){
					a[n]=x;
					sign[n++]=flag;
					x=0;
				}
			}

		}
		a[n]=x;
		sign[n++]=flag;
		solve(0,0,0);
		int cnt=0;
		for (int i = 0; i < 6001; ++i) {
			if(vis[i])cnt++;
		}
		cout<<cnt<<endl;
	}



}
