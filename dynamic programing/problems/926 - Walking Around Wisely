/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'

#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const int OO = 0x3f3f3f3f, N = 100000 + 5, mod = 1e9+7;
using namespace std;
template<typename T>
using Graph = vector<vector<T>>;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}
int n;
bool can[31][31][31][31];
pair<int,int>st,ed;
bool valid(int x,int y){
	return(x>=1 && y>=1 && x<=n && y<=n);
}
ll dp[31][31];
ll solve(int i,int j){
	if(!valid(i,j))return 0;
	if(make_pair(i,j)==ed){
		return 1;
	}
	ll &ret=dp[i][j];
	if(~ret)return ret;
	ret=0;
	if(!can[i][j][i+1][j])
		ret+=solve(i+1,j);
	if(!can[i][j][i][j+1])
			ret+=solve(i,j+1);

	return ret;

}
int main() {
	run();
	int t;cin>>t;
	while(t--){
		mem(can,0);
		cin>>n;
		cin>>st.first>>st.second;
		cin>>ed.first>>ed.second;
		int tmp;
		cin>>tmp;
		while(tmp--){
			int x,y;char c;
			cin>>x>>y>>c;//
			if(c=='E'){
				can[x][y][x+1][y]=can[x+1][y][x][y]=1;
			}
			if(c=='W'){
				can[x][y][x-1][y]=can[x-1][y][x][y]=1;
			}
			if(c=='S'){
				can[x][y][x][y-1]=can[x][y-1][x][y]=1;
			}
			if(c=='N'){
				can[x][y][x][y+1]=can[x][y+1][x][y]=1;
			}

		}
		mem(dp,-1);
		cout<<solve(st.first,st.second)<<endl;
	}

}
