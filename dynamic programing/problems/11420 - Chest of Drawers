/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define IO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const int OO = 0x3f3f3f3f, N = 5000 + 5, mod = 1e9 + 7;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}

/*
 * -Please take 2 minute to find tricky test^^
1- Read all test cases before typing code
2- check data types
3- write TLE code then optimize it
4- get WR-> take example and analysis it
5- valid input ..data swap
6- dp ret minval or maxval and memo is exist
 */
int n,m;
ull dp[66][66][2];
ull solve(int i,int rem,bool ok){
	if(i==n){
		return (!rem ? 1 : 0);
	}
	ull &ret=dp[i][rem][ok];
	if(~ret)return ret;
	ret=0;
	ret+=solve(i+1,rem,0);
	if(ok)ret+=solve(i+1,rem-1,1);
	else ret+=solve(i+1,rem,1);
	return ret;
}
int main() {//IO
	run();
	while(cin>>n>>m&&n>0){
		mem(dp,-1);
		cout<<solve(0,m,1)<<endl;
	}

}
