/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define IO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const int OO = 0x3f3f3f3f, N = 10 + 5, mod = 1e9 + 7;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}

/*
 * -Please take 2 minute to find tricky test^^
1- Read all test cases before typing code
2- check data types
3- write TLE code then optimize it
4- get WR-> take example and analysis it
5- valid input ..data swap
6- dp ret minval or maxval and memo is exist
 */
int n;
long long R[N], C[N];
long long mem[N][N];
long long solve(int l = 0, int r = n-1){
	if(l == r)	return 0;
	long long & ret = mem[l][r];
	if(~ret)	return ret;
	ret = OO;
	for(int mid = l ; mid < r ; ++mid){
		ret = min(ret, solve(l, mid)+solve(mid+1, r)+R[l]*C[r]*C[mid]);
	}
	return ret;
}
void print(int l = 0, int r = n-1){
	if(l == r){
		printf("%c", 'A');
		if(l==9)printf("10");
		else printf("%c", + (l+1)+'0');
		return;
	}
	long long ret = solve(l, r);
	printf("(");
	for(int mid = l ; mid < r ; ++mid){
	 if(ret ==  solve(l, mid)+solve(mid+1, r)+R[l]*C[r]*C[mid]){
	 	print(l, mid);
	 	printf(" x ");
	 	print(mid+1, r);
	 	break;
	 }
	}
 	printf(")");
}
int t=1;
int main() {//IO
	run();
	while(cin>>n&&n){
		for (int i = 0; i < n; ++i)cin>>R[i]>>C[i];

		mem(mem,-1);
		printf("Case %d: ",t++);
		print();
		puts("");
	}

}
