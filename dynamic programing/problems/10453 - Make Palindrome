/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define IO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const int OO = 0x3f3f3f3f, N = 5000 + 5, mod = 1e9 + 7;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}

/*
 * -Please take 2 minute to find tricky test^^
1- Read all test cases before typing code
2- check data types
3- write TLE code then optimize it
4- get WR-> take example and analysis it
5- valid input ..data swap
6- dp ret minval or maxval and memo is exist
 */

int dp[1004][1004];
string memB[1004][1004];
string s,ans;
int solve(int i,int j){
	if(i==j)return 0;
	if(i+1==j)return (s[i]!=s[j]);
	int &ret=dp[i][j];
	if(~ret)return ret;
	ret=OO;
	if(s[i]==s[j])ret=solve(i+1,j-1);
	ret=min(ret,solve(i+1,j)+1);//add in j
	ret=min(ret,solve(i,j-1)+1);//add in i
	return ret;
}
string print(int i,int j){
	if(i==j)return string(1,s[i]);
	if(i+1==j){
		string cur="";
		if(s[i]==s[j]){
			cur+=s[i];cur+=s[j];
		}
		else{

			cur+=s[i];cur+=s[j];cur+=s[i];
		}
		return cur;
	}
	string ret="";
	if(s[i]==s[j]){
		return ret=s[i]+print(i+1,j-1)+s[j];
		//return ;
	}
	int opt=solve(i,j);
	if(opt==solve(i+1,j)+1){
		return ret=s[i]+print(i+1,j)+s[i];//add in j
	}
	else if(opt==solve(i,j-1)+1){
		return ret=s[j]+print(i,j-1)+s[j];//add in i
	}

}

int main() {//IO
	run();
	while(cin>>s){
		mem(dp,-1);
		cout<<solve(0,sz(s)-1)<<" "<<print(0,sz(s)-1)<<endl;
	}


}
