/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define IO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const int OO = 0x3f3f3f3f, N = 5000 + 5, mod = 1e9 + 7;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}

/*
 * -Please take 2 minute to find tricky test^^
1- Read all test cases before typing code
2- check data types
3- write TLE code then optimize it
4- get WR-> take example and analysis it
5- valid input ..data swap
6- dp ret minval or maxval and memo is exist
 */

ll dp[205][205][33];
vector<ll>v;
int n,k;
ll solve(int i=1,int lst=0,int rem=k){
	if(rem<0)return 1e18;
	if(i==n+1)return (!rem ? 0 : 1e18);
	ll &ret=dp[i][lst][rem];
	if(~ret)return ret;
	ret=OO;
	for (int j = i; j <= n; ++j) {
		ret=min(ret,solve(i+1,j,rem-1)+abs(v[i]-v[j]));
	}
	ret=min(ret,solve(i+1,lst,rem)+abs(v[i]-v[lst]));
	return ret;
}
map<int,vector<int>>mp;
void print(int i=1,int lst=0,int rem=k){
	if(rem<0)return ;
	if(i==n+1)return ;
	ll ret=solve(i,lst,rem);
	for (int j = i; j <= n; ++j) {
		if(ret==solve(i+1,j,rem-1)+abs(v[i]-v[j])){
			mp[j].push_back(i);
			print(i+1,j,rem-1);
			return ;
		}
	}
	if(ret==solve(i+1,lst,rem)+abs(v[i]-v[lst])){
		mp[lst].push_back(i);
		print(i+1,lst,rem);
		return ;
	}
	return;
}

int main() {//IO
	run();
	int tt=1;
	while(cin>>n>>k&&n&&k){
		v=vector<ll>(n+1);
		for (int i = 1; i <= n; ++i) {
			cin>>v[i];
		}
		mp.clear();
		v[0]=1e18;
		mem(dp,-1);
		printf("Chain %d\n",tt++);
		print();
		int idx=1;
		for(auto t : mp){
			if(sz(t.second)==1)printf("Depot %d at restaurant %d serves restaurant %d\n",idx++,t.first,t.second.back());
			else printf("Depot %d at restaurant %d serves restaurants %d to %d\n",idx++,t.first,t.second[0],t.second.back());
		}
		printf("Total distance sum = %lld\n",solve());
		puts("");
	}

}
