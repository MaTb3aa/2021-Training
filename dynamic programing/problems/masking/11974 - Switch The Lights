/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define INF 0x3f3f3f3f3f3f3f3fLL
#define OO  0x3f3f3f3f
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
using namespace std;
template<typename T>
using Graph = vector<vector<T>>;
typedef long long ll;
typedef unsigned long long ull;
const int N = (1<<12) + 5, M = 2e5 + 5, mod = 1e9 + 7;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}
 // __builtin_popcount

int n,m;
vector<int>switchs;
int dp[(1<<16)];
int  solve(int mask){
	if(!mask)return 0;
	int &ret=dp[mask];
	if(~ret)return ret;
	ret=OO;
	for (int i = 0; i < m; ++i) {
		ret=min(ret,solve(mask^switchs[i])+1);
	}
	return ret;
}
int tt=1;
int main() {
	run();
	int t;
	cin>>t;
	while(t--){
		cin>>n>>m;
		switchs =vector<int>(m);
		for (int i = 0; i < m; ++i) {
			int key=0;
			for (int j = 0; j < n; ++j) {
				bool k;cin>>k;
				if(k)key|=(1<<j);
			}
			switchs[i]=key;
		}
		mem(dp,-1);
		cout<<"Case "<<tt++<<": ";
		if(solve((1<<n)-1)==OO)cout<<"IMPOSSIBLE\n";
		else cout<<solve((1<<n)-1)<<endl;

	}

}
