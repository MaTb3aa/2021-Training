/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define INF 0x3f3f3f3f3f3f3f3fLL
#define OO  0x3f3f3f3f
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
using namespace std;
template<typename T>
using Graph = vector<vector<T>>;
typedef long long ll;
typedef unsigned long long ull;
const int N = 350, M = 2000 + 5, mod = 1e9 + 7;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}
 // __builtin_popcount
int dp[1<<20][105];
int n,k;
int solve(int mask,int cnt){
	if(__builtin_popcount(mask)==n)return cnt==k;
	int &ret=dp[mask][cnt];
	if(~ret)return ret;
	ret=0;
	int ctr=0;
	for (int i = 0; i < n; ++i) {
		ctr=0;
		if((mask&(1<<i)))continue;
		for (int j = i-1; j >= 0; --j) {
			if(!(mask&(1<<j)))ctr++;
		}
		ret+=solve(mask|(1<<i),cnt+ctr);
	}
	return ret;
}

int main() {
	run();
	int t;
	cin>>t;
	while(t--){
		cin>>n>>k;
		mem(dp,-1);
		cout<<solve(0,0)<<endl;
	}




}
