/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define INF 0x3f3f3f3f3f3f3f3fLL
#define OO  0x3f3f3f3f
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
using namespace std;
template<typename T>
using Graph = vector<vector<T>>;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}
int n,p1,p2;
vector<pair<int,int>>v;
double dp[101][101][101];
double dis(int i,int j){
	return sqrt((v[i].first - v[j].first) *(v[i].first - v[j].first) +
			(v[i].second - v[j].second) *(v[i].second - v[j].second) );
}
double solve(int starting,int ending,int now){
	   if(now==n-1){
		   return dis(now,starting)+dis(now,ending);
	   }

	   if(p2==1)return INF;//Why?!!!

	   double &ret=dp[starting][ending][now];
	   if(ret!=0)return ret;

	   double ch1 = solve(now,ending,now+1)+dis(starting,now);
	   double ch2 = solve(starting,now,now+1)+dis(ending,now);

	   if(now==p1||now==1)
		   return ret=ch1;
	   if(now==p2)
		   return ret=ch2;

	   return ret=min(ch1,ch2);
}
set<int>done;
void print(int starting,int ending,int now){
	   if(now==n-1){

		   for (int i = n-1; i >= 0; --i)
			if(!done.count(i))
				cout<<i<<" ";

		   return ;
	   }

	   double ch1 = solve(now,ending,now+1)+dis(starting,now);
	   double ch2 = solve(starting,now,now+1)+dis(ending,now);

	   if(now==p1){
		   done.insert(now);
		   cout<<now<<" ";
		   print(now,ending,now+1);
		   return ;

	   }
		  // return ret=ch1;
	   if(now==p2){

		   print(starting,now,now+1);
		   return ;
	   }
	   if(ch1<ch2){
		   done.insert(now);
		   cout<<now<<" ";
		   print(now,ending,now+1);
		   return ;
	   }
	   print(starting,now,now+1);

}

double best(int n,int &p1,int &p2){
	  mem(dp,0);
	  done.clear();
	  double ans1 = solve(0,0,1);

	  mem(dp,0);
	  done.clear();
	  swap(p1,p2);

	  double ans2 = solve(0,0,1);

	  if(ans1<ans2){
		  mem(dp,0);
		  done.clear();
		  swap(p1,p2);
		  return solve(0,0,1);
	  }
	  done.clear();
	  return ans2;
}
int test=1;
int main() {
	run();
	while(cin>>n>>p1>>p2 && n){

		v=vector<pair<int,int>>(n);
		for(auto &t: v){
			cin>>t.first>>t.second;
		}
		cout<<fixed<<setprecision(2);
		cout<<"Case "<<test++<<": "<<best(n,p1,p2)<<endl;
		cout<<"0 1 ";
		done.insert(0);
		done.insert(1);
		print(1,0,2);
		cout<<"0"<<endl;
	}

}
