/***  بسم الله الرحمن ا لرحيم   ***/
/* MaTb3aa */
#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
#include<unordered_map>
#define endl                         '\n'
#define Ceil(x,y)             ((x+y-1)/y)
#define sz(s)               (int)s.size()
#define RT(x)           return cout<<x,0;
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define test int t;cin>>t;while(t--)
#define Point pair<ll, ll>
#define F first
#define S second
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1,0 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1,0 };
const double PI = acos(-1), EPS = 1e-9;
const int OO = 0x3f3f3f3f, N = 2e6 + 5, mod = 1e9 + 7;
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef unsigned long long ull;
ll gcd(ll x, ll y) { return (!y) ? x : gcd(y, x % y); }
ll lcm(ll x, ll y) { return ((x / gcd(x, y)) * y); }
void file() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    //  freopen("output.txt", "w", stdout);
#endif  !ONLINEJUDGE
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
}
int spf[N];

void sieve() {
    spf[1] = 1;
    for (int i = 2; i < N; i++)spf[i] = i;

    for (int i = 4; i < N; i += 2)spf[i] = 2;

    for (int i = 3; i * i < N; i++) {
        if (spf[i] == i) {
            for (int j = i * i; j < N; j += i)
                if (spf[j] == j)spf[j] = i;
        }
    }
}
int solve(int x) {
    map<int, int>mp;
    while (x != 1) {
        mp[spf[x]]++;
        x = x / spf[x];
    }
    int cnt = 1;
    for (auto t : mp) {
        cnt *= (t.second + 1);
    }
    return cnt - sz(mp);

}
int main() {
    //file();
    sieve();
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int q; cin >> q;
    while (q--) {
        int x; cin >> x;
        cout << solve(x) << endl;
    }


}
