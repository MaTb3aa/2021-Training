
const int  N = 10000000 + 5, mod = 1e9 + 7;
int spf[N];
void sieve() {
    spf[1] = 1;
    for (int i = 2; i < N; i++)spf[i] = i;

    for (int i = 4; i < N; i += 2)spf[i] = 2;

    for (int i = 3; i * i < N; i++) {
        if (spf[i] == i) {
            for (int j = i * i; j < N; j += i)
                if (spf[j] == j)spf[j] = i;
        }
    }
}
int findDiv(int x) {  //order prime fact
    map<int, int>mp;
    while (x != 1) {
        mp[spf[x]]++;
        x = x / spf[x];
    }
    int cnt = 1;
    for (auto t : mp) {
        cnt *= (t.second + 1);
    }

    return cnt ;

}
int main(){
    run();
    sieve();
	int x; cin >> x;
	cout << findDiv(x) << endl;

}
