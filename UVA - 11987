/***  الرحيم الرحمن الله بسم   ***/
/* The New DSU */
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const int OO = 0x3f3f3f3f, N = 300000 + 5, mod = 1e5 + 7;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}

ll par[N],cnt[N],sum[N],vice[N];
void make_set ( int n ) {
    for ( int i = 1, j = n + 1; i <= n; ++i, ++j ) {
        par[i] = j;
        par[j] = j;
        cnt[j] = 1;
        sum[j] = i;
    }
}
int find(int u){
	if(par[u]==u)return u;
	return par[u]=find(par[u]);
}

void join(int u,int v){
	u = find(u);
	v = find(v);
	if(u==v)return ;
	// join v to u
	cnt[u]+=cnt[v];
	sum[u]+=sum[v];
	par[v]=u;
}
void move(int u,int v){
	int pu = find(u);
	int pv = find(v);
	if(pu==pv)return ;
	// remove u from par (u)
	cnt[pu]--;sum[pu]-=u;
	// add u to par(v)
	cnt[pv]++;sum[pv]+=u;
	par[u]=pv;
}

int main() {
	run();
	int n,q;
	while(cin>>n>>q){
		make_set(n);
		while(q--){
			int t;cin>>t;
			if(t==1){
				int u,v;cin>>u>>v;
				join(u,v);
			}
			else if(t==2){
				int u,v;cin>>u>>v;
				move(u,v);
			}
			else {
				int x;cin>>x;
				x=find(x);
				cout<<cnt[x]<<" "<<sum[x]<<endl;
			}

		}
	}

}
