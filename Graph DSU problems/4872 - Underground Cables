/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define IO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const int OO = 0x3f3f3f3f, N = 300000 + 5, mod = 1e5 + 7;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}
int par[N];
int find(int u){
	if(u==par[u])return u;
	return par[u]=find(par[u]);
}
void join(int u,int v){
	u=find(u);
	v=find(v);
	if(u==v)return;
	par[v]=u;
}
struct edge{
	int u,v;
	double w;
	bool operator <(edge const &other){
		return w<other.w;
	}
};
double dis(pair<ll,ll>p1,pair<ll,ll>p2){
	return sqrt((p1.first-p2.first)*(p1.first-p2.first)*1.0 +
				(p1.second-p2.second)*(p1.second-p2.second));
}
int tt=1;
int main() {//IO
	run();
	int n;
	while(cin>>n &&n){

		vector<pair<int,int>>v(n);
		for(auto &t : v)cin>>t.first>>t.second;
		vector<edge>edges;
		for(int i=0;i<=n;i++)par[i]=i;
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				edges.push_back({i,j,dis(v[i],v[j])});

		double cost=0;
		sort(all(edges));
		for(auto t : edges){
			if(find(t.u)!=find(t.v)){
				cost+=t.w;
				join(t.u,t.v);
			}

		}
		cout<<fixed<<setprecision(2)<<cost<<endl;
	}


}
