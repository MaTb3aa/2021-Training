/***  الرحيم الرحمن الله بسم   ***/
#include<bits/stdc++.h>
#define sz(s)               (int)s.size()
#define mem(x,y)    memset(x,y,sizeof(x))
#define all(v) ((v).begin()), ((v).end())
#define RT(x)           return cout<<x,0;
#define endl                         '\n'
#define watch(x) cout<<#x<<" = { "<<x<<" }\n"
#define IO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
const int dx[] = { 0, -1, 0, 1, 1, 1, -1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };
const int OO = 0x3f3f3f3f, N = 300000 + 5, mod = 1e5 + 7;
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
void run() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#else
	//freopen("groups.in", "r", stdin);
#endif
}
int par[N];
void pre(int n){
	for(int i=0;i<=n;i++)par[i]=i;
}
int find(int u){
    if(par[u]==u)return u;
    return par[u]=find(par[u]);
}
void link(int u,int v){
    u =find(u); v=find(v);
    if(u==v)return ;
    par[v]=u;
}

struct Edge {
    int u, v, weight;
    bool operator<(const Edge& other) const {
        return weight > other.weight;
    }
};


int main() {//IO
	run();
	int t;cin>>t;
	while(t--){
		int n,m;
		cin>>n>>m;
		vector<Edge>edges(m);
		for(auto &t:edges)cin>>t.u>>t.v>>t.weight;
		sort(all(edges));
		ll cost=0;
		pre(n);

		for(auto t : edges){
			if(find(t.u)==find(t.v))
				cost+=t.weight;
			else link(t.u,t.v);
		}
		cout<<cost<<endl;


	}
}
